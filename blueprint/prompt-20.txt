Implement research history tracking for GermanLawFinder. Create:

1. Database models for:
   - SearchHistory (user, query, timestamp, filters)
   - ViewedItems (user, section reference, timestamp)
   - ResearchSessions (grouping of related searches)
   - ExportedSearches (tracking exports)

2. Create API endpoints:
   - History retrieval (/api/history)
   - History filtering (/api/history/filter)
   - History export (/api/history/export)
   - History deletion (/api/history/delete)

3. Implement frontend components:
   - HistoryView for browsing search history
   - HistoryFilters for narrowing results
   - HistoryItem for displaying past searches
   - HistoryExport for generating reports
   - HistorySearch for finding past queries

4. Create Pinia store:
   - HistoryStore for managing history state
   - Actions for retrieving and filtering history
   - Integration with search functionality
   - Local caching of recent history

5. Add organization features:
   - Grouping by date and topic
   - Timeline visualization
   - Frequently used queries
   - Search patterns analysis

The implementation should provide a comprehensive history tracking system that helps users retrace their research steps and build on previous work. Ensure privacy considerations are addressed with appropriate controls for history management. Use TypeScript for frontend components and Python 3.12 type hints for backend code.
